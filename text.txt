in server folder:

- need to use npm init -y to use npm libraries to create backend

- npm init -y
- npm i body-parser cors express mongoose nodemon

- change server/package.json to include "start": "nodemon index.js" and "type": "module" to indicate where the server should run and to be able to import express instead of declaring a const

body-parser:

- enables us to send POST requests

cors: 

- enables cross origin requests

express:

- used as a framework for creating the routing of application

mongoose:

- create models for our posts

nodemon:

- don't have to reset server after changes


1. First setup server folder with index.js and import all required libraries.
Then add boilerplate express code to get server running. Connect mongoose to application.

2. Add routes folder where will write all routes, import, and connect them to server/index.js

3. Add controllers folder and create methods(handlers) for routes.

4. Create server/models folder and use mongoose to create Schemas

5. Create src/api and import axios to start calling APIs

6. Use Redux to manage actions towards our backend and dispatch those actions
- create actions and reducers folders, then go to root index.js and import dependencies

7. A reducer is a function that accepts state, and action. Based on the action type, it will do some logic
- <Provider store={store} is to connect redux 